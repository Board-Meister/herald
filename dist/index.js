var c=class{#e={subscribers:[]};#r={};#t={};static{this.inject={marshal:"boardmeister/marshal",subscribers:"!subscriber"}}inject(r){this.#e&&(this.#e=r,this.#a())}async dispatch(r){this.#s(r);for(let t of this.#o(r.type))try{if(await this.#n(t)(r),this.#i(r))break}catch(e){throw console.error("Dispatcher error:",e),e}}dispatchSync(r){this.#s(r);for(let t of this.#o(r.type))try{if(this.#n(t)(r),this.#i(r))break}catch(e){throw console.error("Dispatcher error:",e),e}}#i(r){return r.cancelBubble}#s(r){if(!(r instanceof CustomEvent))throw new Error("Event passed to dispatcher must be of type CustomEvent")}#o(r){return[...this.#r[r]??[]]}#n(r){let t=r.constraint,{marshal:e=null}=this.#e,s=typeof t=="string"?e?.get(t):t,i=r.method;if(s&&typeof i=="string"&&(i=s[i]??null,i&&(i=i.bind(s))),typeof i!="function")throw console.error("Error below references this object",t),new Error("Module "+String(t.constructor??t)+" doesn't have non-static method "+String(r.method));return i}#u(r){return typeof r=="object"&&!Array.isArray(r)&&r!==null}#a(){let{marshal:r=null,subscribers:t=[]}=this.#e;this.#r={},t.forEach(e=>{let s=e.module.subscriptions??e.module.constructor?.subscriptions;typeof s=="object"&&this.#u(s)&&Object.keys(s).forEach(i=>{this.register(i,s[i],r?.getModuleConstraint(e.config)??null,!1)})}),Object.keys(this.#r).forEach(e=>{this.#c(e)})}batch(r){let t=[];return r.forEach(({event:e,subscription:s,constraint:i=null,sort:n=!0,symbol:o=null})=>{t.push(this.register(e,s,i,n,o))}),()=>{t.forEach(e=>{e()})}}register(r,t,e=null,s=!0,i=null){i??=Symbol("event");let n=Array.isArray(t)?t:[typeof t=="object"?t:{method:t}];for(let o of n){if(o.priority??=0,o.priority<-256||o.priority>256)throw console.error("Subscriber priority must be in range -256:256",{[r]:o}),new Error("Error above stopped registration of an event");o.constraint??=e}return this.#r[r]=[...this.#r[r]??[],...n],this.#t[i]=[...this.#t[i]??[],...n],s&&this.#c(r),()=>{this.unregister(r,i)}}unregister(r,t){if(!this.#t[t]){console.warn("Tried to unregister not registered events",r);return}let e=[...this.#r[r]];this.#t[t].forEach(s=>{let i=e.indexOf(s);if(i!==-1)e.splice(i,1);else throw new Error("Attempt to remove event from wrong collection")}),this.#r[r]=e,delete this.#t[t]}#c(r){this.#r[r].sort((t,e)=>t.priority-e.priority)}},u=c,b=u;export{c as Herald,b as default};
