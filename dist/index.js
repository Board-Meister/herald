var n=class{#t={};#r={};#o=null;constructor(t=null){this.#o=t}async dispatch(t,r={}){this.#i(t);for(let o of this.#s(t.type,r))try{if(await this.#n(o)(t),this.#e(t))break}catch(e){throw console.error("Dispatcher error:",e),e}}dispatchSync(t,r={}){this.#i(t);for(let o of this.#s(t.type,r))try{if(this.#n(o)(t),this.#e(t))break}catch(e){throw console.error("Dispatcher error:",e),e}}batch(t){let r=[];return t.forEach(({event:o,subscription:e,constraint:i=null,sort:s=!0,symbol:u=null,anchor:l=null})=>{r.push(this.listen({event:o,subscription:e,constraint:i,sort:s,symbol:u,anchor:l}))}),()=>{r.forEach(o=>{o()})}}listen({event:t,subscription:r,constraint:o=null,sort:e=!0,symbol:i=null,anchor:s=null}){return this.register(t,r,o,e,i,s)}register(t,r,o=null,e=!0,i=null,s=null){i??=this.#c();let u=this.#u(r,o,s),l=this.#l(t,i,u);return e&&this.#h(t),l}unregister(t,r){if(!this.#r[r]){console.warn("Tried to unregister not registered events",t);return}let o=[...this.#t[t]];this.#r[r].forEach(e=>{let i=o.indexOf(e);if(i!==-1)o.splice(i,1);else throw new Error("Attempt to remove event from wrong collection")}),this.#t[t]=o,delete this.#r[r]}#u(t,r=null,o=null){let e=Array.isArray(t)?t:[typeof t=="object"?t:{method:t}],i=[];for(let s of e)i.push({method:s.method,priority:s.priority??0,constraint:s.constraint??r,anchor:s.anchor??o});return i}#l(t,r,o){return this.#t[t]=[...this.#t[t]??[],...o],this.#r[r]=[...this.#r[r]??[],...o],()=>{this.unregister(t,r)}}#c(){return Symbol("event")}#e(t){return t.cancelBubble}#i(t){if(!(t instanceof CustomEvent))throw new Error("Event passed to dispatcher must be of type CustomEvent")}#s(t,{origin:r=null,direction:o="up"}){let e=[];for(let i of this.#t[t]??[])this.#a(i,r,o)&&e.push(i);return e}#a(t,r,o){return!r||!t.anchor||t.anchor===r?!0:o=="up"&&t.anchor.contains(r)||o=="down"&&r.contains(t.anchor)||o=="both"&&(r.contains(t.anchor)||t.anchor.contains(r))}#n(t){let r=t.constraint,o=typeof r=="string"?this.#o?.get(r):r,e=t.method;if(o&&typeof e=="string"&&(e=o[e]??null,e&&(e=e.bind(o))),typeof e!="function")throw console.error("Error below is related to this subscriber",t),new Error("Subscriber doesn't have proper method");return e}#h(t){this.#t[t].sort((r,o)=>r.priority-o.priority)}};var p=n;export{n as Herald,p as default};
