var o=class{#r={};#t={};#s=null;constructor(t=null){this.#s=t}async dispatch(t,r={}){this.#n(t);for(let s of this.#o(t.type,r))try{if(await this.#u(s)(t),this.#i(t))break}catch(e){throw console.error("Dispatcher error:",e),e}}dispatchSync(t,r={}){this.#n(t);for(let s of this.#o(t.type,r))try{if(this.#u(s)(t),this.#i(t))break}catch(e){throw console.error("Dispatcher error:",e),e}}batch(t){let r=[];return t.forEach(({event:s,subscription:e,constraint:i=null,sort:n=!0,symbol:u=null,anchor:c=null})=>{r.push(this.listen({event:s,subscription:e,constraint:i,sort:n,symbol:u,anchor:c}))}),()=>{r.forEach(s=>{s()})}}listen({event:t,subscription:r,constraint:s=null,sort:e=!0,symbol:i=null,anchor:n=null}){return this.register(t,r,s,e,i,n)}register(t,r,s=null,e=!0,i=null,n=null){i??=this.#l();let u=this.#e(r,s,n),c=this.#c(t,i,u);return e&&this.#h(t),c}unregister(t,r){if(!this.#t[r]){console.warn("Tried to unregister not registered events",t);return}let s=[...this.#r[t]];this.#t[r].forEach(e=>{let i=s.indexOf(e);if(i!==-1)s.splice(i,1);else throw new Error("Attempt to remove event from wrong collection")}),this.#r[t]=s,delete this.#t[r]}#e(t,r=null,s=null){let e=Array.isArray(t)?t:[typeof t=="object"?t:{method:t}],i=[];for(let n of e)i.push({method:n.method,priority:n.priority??0,constraint:n.constraint??r,anchor:n.anchor??s});return i}#c(t,r,s){return this.#r[t]=[...this.#r[t]??[],...s],this.#t[r]=[...this.#t[r]??[],...s],()=>{this.unregister(t,r)}}#l(){return Symbol("event")}#i(t){return t.cancelBubble}#n(t){if(!(t instanceof CustomEvent))throw new Error("Event passed to dispatcher must be of type CustomEvent")}#o(t,{origin:r=null,direction:s="up"}){let e=[];for(let i of this.#r[t]??[])this.#a(i,r,s)&&e.push(i);return e}#a(t,r,s){return!r||!t.anchor||t.anchor===r?!0:s=="up"&&t.anchor.contains(r)||s=="down"&&r.contains(t.anchor)||s=="both"&&(r.contains(t.anchor)||t.anchor.contains(r))}#u(t){let r=t.constraint,s=typeof r=="string"?this.#s?.get(r):r,e=t.method;if(s&&typeof e=="string"&&(e=s[e]??null,e&&(e=e.bind(s))),typeof e!="function")throw console.error("Error below is related to this subscriber",t),new Error("Subscriber doesn't have proper method");return e}#h(t){this.#r[t].sort((r,s)=>r.priority-s.priority)}};var l=class{#r={subscribers:[]};#t;static{this.inject={marshal:"boardmeister/marshal",subscribers:"!subscriber"}}inject(t){this.#r=t,this.#t=new o(this.#r.marshal),this.#s()}dispatch(t,r={}){return this.#t.dispatch(t,r)}dispatchSync(t,r={}){return this.#t.dispatchSync(t,r)}batch(t){return this.#t.batch(t)}listen(t){return this.#t.listen(t)}register(t,r,s=null,e=!0,i=null,n=null){return this.#t.register(t,r,s,e,i,n)}unregister(t,r){return this.#t.unregister(t,r)}#s(){let{marshal:t=null,subscribers:r=[]}=this.#r;r.forEach(s=>{let e=s.module.subscriptions??s.module.constructor?.subscriptions;typeof e=="object"&&this.#e(e)&&Object.keys(e).forEach(i=>{this.#t.listen({event:i,subscription:e[i],constraint:t?.getModuleConstraint(s.config)??null})})})}#e(t){return typeof t=="object"&&!Array.isArray(t)&&t!==null}},h=l,p=h;export{l as HeraldPlugin,p as default};
