"use strict";var s=function(o,r,t,e){if(t==="a"&&!e)throw new TypeError("Private accessor was defined without a getter");if(typeof r=="function"?o!==r||!e:!r.has(o))throw new TypeError("Cannot read private member from an object whose class did not declare it");return t==="m"?e:t==="a"?e.call(o):e?e.value:r.get(o)},m=function(o,r,t,e,a){if(e==="m")throw new TypeError("Private method is not writable");if(e==="a"&&!a)throw new TypeError("Private accessor was defined without a setter");if(typeof r=="function"?o!==r||!a:!r.has(o))throw new TypeError("Cannot write private member to an object whose class did not declare it");return e==="a"?a.call(o,t):a?a.value=t:r.set(o,t),t},h,l,c,u,b,y;export class Herald{constructor(){h.add(this),l.set(this,void 0),c.set(this,{})}inject(r){s(this,l,"f")||(m(this,l,r,"f"),s(this,h,"m",b).call(this))}async dispatch(r){if(!(r instanceof CustomEvent))throw new Error("Event passed to dispatcher must be of type CustomEvent");const{marshal:t}=s(this,l,"f"),e=r.type,a=s(this,c,"f")[e]??[];for(const f of a)try{const i=f.constraint,d=typeof i=="string"?t.get(i):i;let n=f.method;if(d&&typeof n=="string"&&(n=d[n]??null,n&&(n=n.bind(d))),typeof n!="function")throw new Error("Module "+String(i.constructor??i)+" doesn't have non-static method "+String(f.method));if(await n(r),r.cancelBubble)break}catch(i){console.error("Dispatcher error:",i)}}register(r,t,e,a=!0){const f=Array.isArray(t)?t:[t];for(const i of f)if(i.priority<-256||i.priority>256){console.error("Subscriber priority must be in range -256:256",{[r]:i});return}e??(e=null),s(this,c,"f")[r]=[...s(this,c,"f")[r]??[],...s(this,h,"m",u).call(this,t)&&[{...t,constraint:e}]||Array.isArray(t)&&t.map(i=>({...i,constraint:e}))||[{method:t,priority:0,constraint:e}]],a&&s(this,h,"m",y).call(this,r)}}l=new WeakMap,c=new WeakMap,h=new WeakSet,u=function(r){return typeof r=="object"&&!Array.isArray(r)&&r!==null},b=function(){const{marshal:r}=s(this,l,"f");m(this,c,{},"f"),s(this,l,"f").subscribers.forEach(t=>{const e=t.module.subscriptions??t.module.constructor?.subscriptions;typeof e=="object"&&s(this,h,"m",u).call(this,e)&&Object.keys(e).forEach(a=>{this.register(a,e[a],r.getModuleConstraint(t.config),!1)})}),Object.keys(s(this,c,"f")).forEach(t=>{s(this,h,"m",y).call(this,t)})},y=function(r){s(this,c,"f")[r].sort((t,e)=>t.priority-e.priority)},Herald.inject={marshal:"boardmeister/marshal",subscribers:"!subscriber"};const p=Herald;export default p;
