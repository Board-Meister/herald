"use strict";var s=function(a,t,r,e){if(r==="a"&&!e)throw new TypeError("Private accessor was defined without a getter");if(typeof t=="function"?a!==t||!e:!t.has(a))throw new TypeError("Cannot read private member from an object whose class did not declare it");return r==="m"?e:r==="a"?e.call(a):e?e.value:t.get(a)},m=function(a,t,r,e,o){if(e==="m")throw new TypeError("Private method is not writable");if(e==="a"&&!o)throw new TypeError("Private accessor was defined without a setter");if(typeof t=="function"?a!==t||!o:!t.has(a))throw new TypeError("Cannot write private member to an object whose class did not declare it");return e==="a"?o.call(a,r):o?o.value=r:t.set(a,r),r},n,f,c,l,d,p,_,b,y,g,w;export class Herald{constructor(){n.add(this),f.set(this,{subscribers:[]}),c.set(this,{}),l.set(this,{})}inject(t){s(this,f,"f")&&(m(this,f,t,"f"),s(this,n,"m",g).call(this))}async dispatch(t){s(this,n,"m",p).call(this,t);for(const r of s(this,n,"m",_).call(this,t.type))try{if(await s(this,n,"m",b).call(this,r)(t),s(this,n,"m",d).call(this,t))break}catch(e){throw console.error("Dispatcher error:",e),e}}dispatchSync(t){s(this,n,"m",p).call(this,t);for(const r of s(this,n,"m",_).call(this,t.type))try{if(s(this,n,"m",b).call(this,r)(t),s(this,n,"m",d).call(this,t))break}catch(e){throw console.error("Dispatcher error:",e),e}}batch(t){const r=[];return t.forEach(({event:e,subscription:o,constraint:i=null,sort:u=!0,symbol:h=null})=>{r.push(this.register(e,o,i,u,h))}),()=>{r.forEach(e=>{e()})}}register(t,r,e=null,o=!0,i=null){i??(i=Symbol("event"));const u=Array.isArray(r)?r:[typeof r=="object"?r:{method:r}];for(const h of u){if(h.priority??(h.priority=0),h.priority<-256||h.priority>256)throw console.error("Subscriber priority must be in range -256:256",{[t]:h}),new Error("Error above stopped registration of an event");h.constraint??(h.constraint=e)}return s(this,c,"f")[t]=[...s(this,c,"f")[t]??[],...u],s(this,l,"f")[i]=[...s(this,l,"f")[i]??[],...u],o&&s(this,n,"m",w).call(this,t),()=>{this.unregister(t,i)}}unregister(t,r){if(!s(this,l,"f")[r]){console.warn("Tried to unregister not registered events",t);return}const e=[...s(this,c,"f")[t]];s(this,l,"f")[r].forEach(o=>{const i=e.indexOf(o);if(i!==-1)e.splice(i,1);else throw new Error("Attempt to remove event from wrong collection")}),s(this,c,"f")[t]=e,delete s(this,l,"f")[r]}}f=new WeakMap,c=new WeakMap,l=new WeakMap,n=new WeakSet,d=function(t){return t.cancelBubble},p=function(t){if(!(t instanceof CustomEvent))throw new Error("Event passed to dispatcher must be of type CustomEvent")},_=function(t){return[...s(this,c,"f")[t]??[]]},b=function(t){const r=t.constraint,{marshal:e=null}=s(this,f,"f"),o=typeof r=="string"?e?.get(r):r;let i=t.method;if(o&&typeof i=="string"&&(i=o[i]??null,i&&(i=i.bind(o))),typeof i!="function")throw console.error("Error below references this object",r),new Error("Module "+String(r.constructor??r)+" doesn't have non-static method "+String(t.method));return i},y=function(t){return typeof t=="object"&&!Array.isArray(t)&&t!==null},g=function(){const{marshal:t=null,subscribers:r=[]}=s(this,f,"f");m(this,c,{},"f"),r.forEach(e=>{const o=e.module.subscriptions??e.module.constructor?.subscriptions;typeof o=="object"&&s(this,n,"m",y).call(this,o)&&Object.keys(o).forEach(i=>{this.register(i,o[i],t?.getModuleConstraint(e.config)??null,!1)})}),Object.keys(s(this,c,"f")).forEach(e=>{s(this,n,"m",w).call(this,e)})},w=function(t){s(this,c,"f")[t].sort((r,e)=>r.priority-e.priority)},Herald.inject={marshal:"boardmeister/marshal",subscribers:"!subscriber"};const E=Herald;export default E;
