"use strict";var s=function(a,t,r,e){if(r==="a"&&!e)throw new TypeError("Private accessor was defined without a getter");if(typeof t=="function"?a!==t||!e:!t.has(a))throw new TypeError("Cannot read private member from an object whose class did not declare it");return r==="m"?e:r==="a"?e.call(a):e?e.value:t.get(a)},w=function(a,t,r,e,o){if(e==="m")throw new TypeError("Private method is not writable");if(e==="a"&&!o)throw new TypeError("Private accessor was defined without a setter");if(typeof t=="function"?a!==t||!o:!t.has(a))throw new TypeError("Cannot write private member to an object whose class did not declare it");return e==="a"?o.call(a,r):o?o.value=r:t.set(a,r),r},d,f,h,u,b,_,p;export class Herald{constructor(){d.add(this),f.set(this,void 0),h.set(this,{}),u.set(this,{})}inject(t){s(this,f,"f")||(w(this,f,t,"f"),s(this,d,"m",_).call(this))}async dispatch(t){if(!(t instanceof CustomEvent))throw new Error("Event passed to dispatcher must be of type CustomEvent");const{marshal:r}=s(this,f,"f"),e=t.type,o=[...s(this,h,"f")[e]??[]];for(const n of o)try{const i=n.constraint,c=typeof i=="string"?r.get(i):i;let l=n.method;if(c&&typeof l=="string"&&(l=c[l]??null,l&&(l=l.bind(c))),typeof l!="function")throw console.error("Error below references this object",i),new Error("Module "+String(i.constructor??i)+" doesn't have non-static method "+String(n.method));if(await l(t),t.cancelBubble)break}catch(i){throw console.error("Dispatcher error:",i),i}}batch(t){const r=[];return t.forEach(({event:e,subscription:o,constraint:n=null,sort:i=!0,symbol:c=null})=>{r.push(this.register(e,o,n,i,c))}),()=>{r.forEach(e=>{e()})}}register(t,r,e=null,o=!0,n=null){n??(n=Symbol("event"));const i=Array.isArray(r)?r:[typeof r=="object"?r:{method:r}];for(const c of i){if(c.priority??(c.priority=0),c.priority<-256||c.priority>256)throw console.error("Subscriber priority must be in range -256:256",{[t]:c}),new Error("Error above stopped registration of an event");c.constraint??(c.constraint=e)}return s(this,h,"f")[t]=[...s(this,h,"f")[t]??[],...i],s(this,u,"f")[n]=[...s(this,u,"f")[n]??[],...i],o&&s(this,d,"m",p).call(this,t),()=>{this.unregister(t,n)}}unregister(t,r){if(!s(this,u,"f")[r]){console.warn("Tried to unregister not registered events",t);return}const e=[...s(this,h,"f")[t]];s(this,u,"f")[r].forEach(o=>{const n=e.indexOf(o);if(n!==-1)e.splice(n,1);else throw new Error("Attempt to remove event from wrong collection")}),s(this,h,"f")[t]=e,delete s(this,u,"f")[r]}}f=new WeakMap,h=new WeakMap,u=new WeakMap,d=new WeakSet,b=function(t){return typeof t=="object"&&!Array.isArray(t)&&t!==null},_=function(){const{marshal:t}=s(this,f,"f");w(this,h,{},"f"),s(this,f,"f").subscribers.forEach(r=>{const e=r.module.subscriptions??r.module.constructor?.subscriptions;typeof e=="object"&&s(this,d,"m",b).call(this,e)&&Object.keys(e).forEach(o=>{this.register(o,e[o],t.getModuleConstraint(r.config),!1)})}),Object.keys(s(this,h,"f")).forEach(r=>{s(this,d,"m",p).call(this,r)})},p=function(t){s(this,h,"f")[t].sort((r,e)=>r.priority-e.priority)},Herald.inject={marshal:"boardmeister/marshal",subscribers:"!subscriber"};const y=Herald;export default y;
